using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems; //for mouse interactions

public class UIItemMerchant : MonoBehaviour, IPointerClickHandler , IPointerEnterHandler, IPointerExitHandler
 {

    public ItemMerchant item;
    private Image spriteImage;
    private UIItemMerchant selectedItemM;
    private ToolTipMerchant tooltipM;

    private void Awake()
    {
        spriteImage = GetComponent<Image>();
        UpdateItem(null);
        selectedItemM = GameObject.Find("SelectedItem").GetComponent<UIItemMerchant>();
        tooltipM = GameObject.Find("Tooltip").GetComponent<ToolTipMerchant>();
    }

    public void UpdateItem(ItemMerchant item)
    {
        this.item = item;
        if(this.item != null)
        {
            spriteImage.color = Color.white;
            spriteImage.sprite = this.item.icon;
        }
        else
        {
            spriteImage.color = Color.clear;
        }
    }


    //Mouse event generated by IPointerClickHandler interface
    public void OnPointerClick(PointerEventData eventData)
    {
        if(this.item != null) //If we are clicking on an item
        {

            if(selectedItemM.item != null) //If we click on another item while selecting an item
            {
                ItemMerchant clone = new ItemMerchant(selectedItemM.item);
                selectedItemM.UpdateItem(this.item);
                UpdateItem(clone);
            }
            
            
            else //Click on an item while not selecting an item
            {
                selectedItemM.UpdateItem(this.item);
                UpdateItem(null); 
            }
            
            
        
        
        }else if(selectedItemM.item != null) //Drop an item into an empty slot
        {
            UpdateItem(selectedItemM.item);
            selectedItemM.UpdateItem(null);
        }
        
    }

    public void OnPointerEnter(PointerEventData eventData)
    {
        //generate tool tip for hovered item
        if(this.item != null)
        {
            tooltipM.GenerateTooltip(this.item);
        }
    }
   
    //Hide tooltip when no item is hovered
    public void OnPointerExit(PointerEventData eventData)
    {
        //tooltip.gameObject.SetActive(false);
        tooltipM.HideTooltip();
    }

}
