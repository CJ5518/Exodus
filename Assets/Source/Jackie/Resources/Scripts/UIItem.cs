using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems; //for mouse interactions

public class UIItem : MonoBehaviour, IPointerClickHandler , IPointerEnterHandler, IPointerExitHandler

{
    public Item item;
    private Image spriteImage;
    private UIItem selectedItem;
    private Tooltip tooltip;

    private void Awake()
    {
        spriteImage = GetComponent<Image>();
        UpdateItem(null);
        selectedItem = GameObject.Find("SelectedItem").GetComponent<UIItem>();
        tooltip = GameObject.Find("Tooltip").GetComponent<Tooltip>();
    }

    public void UpdateItem(Item item)
    {
        this.item = item;
        if(this.item != null)
        {
            spriteImage.color = Color.white;
            spriteImage.sprite = this.item.icon;
        }
        else
        {
            spriteImage.color = Color.clear;
        }
    }

    //Mouse event generated by IPointerClickHandler interface
    public void OnPointerClick(PointerEventData eventData)
    {
        Debug.Log("Click Detected");
        if(this.item != null)
        {
            
            if(selectedItem.item != null)
            {
                Item clone = new Item(selectedItem.item);
                selectedItem.UpdateItem(this.item);
                UpdateItem(clone);
            }
            
            
            else
            {
                selectedItem.UpdateItem(this.item);
                UpdateItem(null);
            }
            
            
        
        
        }else if(selectedItem.item != null)
        {
            UpdateItem(selectedItem.item);
            selectedItem.UpdateItem(null);
        }
        
    }

    public void OnPointerEnter(PointerEventData eventData)
    {
        //generate tool tip for hovered item
        if(this.item != null)
        {
            tooltip.GenerateTooltip(this.item);
        }
    }
   
    //Hide tooltip when no item is hovered
    public void OnPointerExit(PointerEventData eventData)
    {
        //tooltip.gameObject.SetActive(false);
        tooltip.HideTooltip();
    }

}
